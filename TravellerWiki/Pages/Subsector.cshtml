@page "/Subsector/{subX}/{subY}"
@using System.Text
@using Microsoft.CodeAnalysis.CSharp.Syntax
@using TravellerUniverse
@using TravellerWiki.Data
@model TravellerWiki.SubsectorModel
@inject TravellerMapService MapService
@{
    ViewData["Title"] = "Subsector";
    var subsector = MapService.GetSubsector(Model.SubsectorX, Model.SubsectorY);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
<h1>@subsector.Name Subsector</h1>
<p>The @subsector.Name Subsector is located in the <a href="Islands_Sector">Islands Sector sector</a> and has the following @subsector.WorldCount systems</p>
<div class="hex-row">
    @for (int y = 0; y < subsector.Systems.GetLength(1); y++)
    {

        @for (int x = 0; x < subsector.Systems.GetLength(0); x++)
        {
            var system = subsector.Systems[x, y];
            var bases = new StringBuilder();
            if (system.HasWorld)
            {
                if (system.GasGiant)
                {
                    bases.Append("O");
                }
                if (system.MilitaryBase)
                {
                    bases.Append("+");
                }
                if (system.OtherBase)
                {
                    bases.Append("*");
                }
            }
            var hexType = x / 2 == 0 ? "hex even" : "hex";
            <div class=@hexType style="margin: 10px; border-width: 10px;">
                <div class="left"></div>
                <div class="middle" style="text-align: center">
                    <div>
                        @system.X @system.Y
                    </div>
                    <div>@(system.HasWorld ? system.Name : "")</div>
                    <div>@(system.HasWorld ? system.UWP : "")</div>
                    <div>
                        @bases.ToString()
                    </div>
                </div>
                <div class="right"></div>
            </div>
        }
    }
</div>
<img src="Images/New_Islands_Subsector.jpg" alt="New Islands Subsector Map" style="width:50%;height:50%">
    <h1>Planets</h1>
    <div class="flex-container">
        @foreach (var system in subsector.Systems.OfType<World>().Where(world => world.HasWorld))
        {
        <div>
            <div>Name: @system.Name</div>
            <br />
            <div>UWP: @system.UWP</div>
            <br />
            <div>Location: @system.X:@system.Y</div>
            <br />
            <div>Starport Quality: @system.StarportDescription()</div>
            <br />
            <div>Size: @system.WorldSizeDescription()</div>
            <br />
            <div>Atmosphere: @system.WorldAtmosphereDescrpition()</div>
            <br />
            <div>Hydrographics: @system.WorldHydrographicsDescription()</div>
            <br />
            <div>Population: @system.Population</div>
            <br />
            <div>Primary Government: @system.GovernmentTypeDescrption()</div>
            <br />
            <div>Law Level: @system.LawLevelDescription()</div>
            <br />
            <div>Tech Level: @system.TechLevelDescription()</div>
            <br />
            <div>Temperature: @system.GetTemperatureDescription()</div>
            <br />

            <div>Trade Codes</div>
            <div style="color: orange">

                @foreach (var tradeCode in system.GetTradeCodes())
                {
                    <div>@tradeCode</div>
                }
            </div>
            <br />

            <div>Bases in system</div>
            @if (system.GasGiant)
            {
                <div style="color:orangered">Fuel Depo(s)</div>
            }
            @if (system.MilitaryBase)
            {
                <div style="color:#6bDA26">Military Base</div>
            }
            @if (system.OtherBase)
            {
                <div style="color:white">Other Base</div>
            }
            <br />

            @if (system.Factions != null)
            {
                <div>Factions</div>
                @foreach (var faction in system.Factions)
                {
                    <div style="color: #ffe81F">
                        @system.GovernmentTypeDescrption(faction.GovernmentType)
                        <div style="color: darkorange; "> @((int)faction.Strength!=5? "It is a " + @faction.Strength.ToString().Replace('_',' ') : "The group has " + @faction.Strength.ToString().Replace('_',' '))</div>
                        <div style="color:cyan">It is backed by the @faction.Backer</div>
                    </div>

                    <br />
                }
            }
            <div>Quirk</div>
            <div>
                @system.QuirkDescription()
            </div>
            <br />
            <div>Controlled by</div>
            <a> @system.ControllingFaction</a>
        </div>
        }
    </div>

    <h3><a style="font-style:normal; font-size: larger; text-decoration: #ffe81F underline;" href="/Search">Search</a> <a style="font-style:normal; font-size: larger; text-decoration: #ffe81F underline;" href="/Index">Home page</a> <a style="font-style:normal; font-size: larger; text-decoration: #ffe81F underline;" href="/Islands_Sector">Islands Sector</a> <a style="font-style:normal; font-size: larger; text-decoration: #ffe81F underline;" href="/Rules/">Rules</a></h3>
</body>
