@page "/CharacterCreation/Event/{characterID}"
@using Microsoft.AspNetCore.Html
@using TravellerWiki.Data
@using TravellerWiki.Data.Charcters
@using TravellerWiki.Data.CreationEvents
@using TravellerWiki.Data.Services
@using TravellerWiki.Data.Services.CareerService
@namespace TravellerWiki.Pages.CharacterCreation.CharacterCreator
@using TravellerWiki.Data.TravellerInjuries
@using CharacterCreatorService = TravellerWiki.Data.CharacterCreation.CharacterCreatorService
@inject NavigationManager NavManager;
@inject MultiPageCharacterCreationService MultiCharacterCreationService;
@inject TravellerNationsCharacterInfoService nationsService;
<head>
    <title>@this.ToString().Replace("TravellerWiki.Pages.", "") </title>

</head>

@code{
    [Parameter]
    public string characterID { get; set; }
    
    [Parameter]
    public string DoneURL { get; set; }
    
    [Parameter]
    public string InjuryURL { get; set; }

    [Parameter]
    public string RewardURL { get; set; }

    [Parameter]
    public string CareerURL { get; set; }
    
    public CharacterCreatorService GetService()
    {
        return MultiCharacterCreationService.GetCharacterCreatorService(characterID);
    }


    #region Event Reward
    public void DoneEvent()
    {
        GetService().GainBenefitForTerm();
        NavManager.NavigateTo(DoneURL + characterID);
    }

    public void GetEventInjury()
    {
        NavManager.NavigateTo(InjuryURL + characterID);
    }

    public void GetEventReward()
    {
        NavManager.NavigateTo(RewardURL + characterID);
    }
    #endregion

    #region CareerChange

    string newCareerName = "";
    public void ChangeCareerEvent()
    {
        NavManager.NavigateTo( CareerURL + $"{characterID}/{newCareerName}");
    }
    #endregion

    #region Value Checks
    public int skillToCheckNumber = -1;
    public int attributeToCheckNumber = -1;
    int roll = -1;

    public void EventSkillCheck()
    {
        var evnt = (TravellerEventSkillCheck)GetService().LastEvent;

        if (skillToCheckNumber == -1) skillToCheckNumber = 0;
        roll = GetService().RollDice();
        var passedCheck = evnt.SkillChecks[skillToCheckNumber].PassedCheck(roll);
        if (passedCheck && evnt.HasYesEvent)
        {
            GetService().AddEvent(evnt.YesEvent);
        }
        else if (!passedCheck && evnt.HasNoEvent)
        {
            GetService().AddEvent(evnt.NoEvent);
        }

        skillToCheckNumber = -1;
    }

    public void EventAttributeCheck()
    {
        var evnt = (TravellerEventAttributeCheck)GetService().LastEvent;

        if (attributeToCheckNumber == -1) attributeToCheckNumber = 0;
        roll = GetService().RollDice();
        var passedCheck = evnt.AttributeChecks[attributeToCheckNumber].PassedCheck(roll);
        if (passedCheck && evnt.HasYesEvent)
        {
            GetService().AddEvent(evnt.YesEvent);
        }
        else if (!passedCheck && evnt.HasNoEvent)
        {
            GetService().AddEvent(evnt.NoEvent);
        }

        attributeToCheckNumber = -1;
    }

    public void EventChoiceMade(TravellerEventCharacterCreation evnt)
    {
        GetService().AddEvent(evnt);
    }
    #endregion
}
<div style="padding-left: 2em;">
    <p>@GetService().LastEvent.EventText</p>
    @if (GetService().LastEvent is TravellerEventAttributeCheck attribute)
    {
        <p>Success: @(attribute.YesText)</p>
        <p>Failure: @(attribute.NoText)</p>
        <p>
            Select an attribute to check against:
            <select @bind="attributeToCheckNumber">
                @for (int i = 0; i < attribute.AttributeChecks.Count; i++)
                {
                    <option value="@i">@(attribute.AttributeChecks[i])</option>
                }
            </select>

            <button @onclick="EventAttributeCheck">Preform Check</button>
        </p>
    }
    else if (GetService().LastEvent is TravellerEventChangeCareerWithAssignment changeWithAssignment)
    {
        var chosenCareer = GetService().GetCareer(changeWithAssignment.NewCareerName);
        var chosenAssignment = GetService().GetAssignment(chosenCareer, changeWithAssignment.Assignment);
        GetService().JoinCareer(chosenCareer, chosenAssignment);
        <button @onclick="DoneEvent">I understand.</button>
    }
    else if (GetService().LastEvent is TravellerEventChangeCareers changeCareer)
    {
        newCareerName = changeCareer.NewCareerName;
        <button @onclick="ChangeCareerEvent">Okay, let me pick an assignment.</button>
    }
    else if (GetService().LastEvent is TravellerEventSkillCheck skillCheck)
    {
        <p>Pass: @(skillCheck.YesText)</p>
        <p>Fail: @(skillCheck.NoText)</p>
        <p>
            Select an skill to check against:

            <select @bind="skillToCheckNumber">
                @for (int i = 0; i < skillCheck.SkillChecks.Count; i++)
                {
                    <option value="@i">@(skillCheck.SkillChecks[i])</option>
                }
            </select>

            <button @onclick="EventSkillCheck">Preform Check</button>
        </p>
    }
    else if (GetService().LastEvent is TravellerEventChoice choice)
    {
        <button @onclick="() => EventChoiceMade(choice.YesEvent)">@choice.YesText</button>
        <button @onclick="() => EventChoiceMade(choice.NoEvent)">@choice.NoText</button>
    }
    else if (GetService().LastEvent is TravellerEventLife life)
    {
        <p>Life Event</p>
        <button @onclick="DoneEvent">[Done]</button>
    }
    else if (GetService().LastEvent is TravellerEventMishap mishap)
    {
        roll = GetService().RollDice(1);
        GetService().AddEvent(GetService().GetMishap(roll));
    }
    else if (GetService().LastEvent is TravellerEventMultiChoice multi)
    {
        var i = 0;
        @foreach (var evnt in multi.Events)
        {

            <button @onclick="() => EventChoiceMade(evnt)">Option @i: @evnt.EventText </button>
        }
    }
    else if (GetService().LastEvent is TravellerEventText eventText)
    {
        <button @onclick="DoneEvent">[Done]</button>
    }
    else if (GetService().LastEvent is TravellerEventReward rewards)
    {
        <button @onclick="GetEventReward">Get Reward</button>
    }
    else if (GetService().LastEvent is TravellerEventSeverelyInjured injured)
    {
        <button @onclick="GetEventInjury">Oh no!</button>
    }
    else if (GetService().LastEvent is TravellerEventInjury injuryEvnt)
    {
        <button @onclick="GetEventInjury">Oh no!</button>
    }
</div>