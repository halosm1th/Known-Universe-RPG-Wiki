@page "/CharacterCreation/BasicTraining/{characterID}"
@using Microsoft.AspNetCore.Html
@using TravellerWiki.Data
@using TravellerWiki.Data.Charcters
@using TravellerWiki.Data.Services
@using TravellerWiki.Data.Services.CareerService
@using  TravellerWiki.Pages.CharacterCreation.CharacterCreator;
@using CharacterCreatorService = TravellerWiki.Data.CharacterCreation.CharacterCreatorService
@inject NavigationManager NavManager
@inject MultiPageCharacterCreationService MultiCharacterCreationService
@inject TravellerNationsCharacterInfoService nationsService;
<head>
    <title>Basic Training (6/17) </title>

</head>

@code{
    [Parameter]
    public string characterID { get; set; }

    bool DonePickingSkills = false;
    public void ChangeDonePickingSkills() => DonePickingSkills = !DonePickingSkills;
    public CharacterCreatorService GetService()
    {
        return MultiCharacterCreationService.GetCharacterCreatorService(characterID);
    }

    public void DoneBasicTraining()
    {
        NavManager.NavigateTo($"/CharacterCreation/GenerateCareerSkill/{characterID}");
    }

    public bool HasBasicTrainingSkill = false;
    public string ChosenBasicTrainingSkillName = "";

    public void ChooseBasicTrainingSkill()
    {
        var skill = GetService().LastCareer.ServiceSkillsList.First(x => x.Name == ChosenBasicTrainingSkillName);
        GetService().ApplyRegularBasicTraining(skill);
        HasBasicTrainingSkill = true;
        DoneBasicTraining();
    }

    public void AllBasicTraining()
    {
        GetService().ApplyFirstBasicTraining(GetService().LastCareer);
        DoneBasicTraining();
    }

}
<body>

<h1>Traveller Character Creator</h1>
<div class="creatorMarkup">
    <h2>Basic Training - @GetService().LastCareer.CareerName</h2>
    <label for="CharacterProgress">Character Creation Progress: </label>
    <progress id="CharacterProgess" value="6" max="17"></progress>
    <CharacterCreationDrawStats CharacterID="@characterID" />
    <div style="padding-left: 2em;">
        @if (GetService().GetsBasicTraining() && !GetService().HasHadJob)
        {
            <p>You gain: @(GetService().LastCareer.ServiceSkillsList.Aggregate("", (h, t) => h += t.Name + ", ")) from your first basic training.</p>
            <button @onclick="AllBasicTraining">Done Basic Training</button>
        }
        else if (GetService().GetsBasicTraining())
        {
            //TODO fix jackluck, didn't work.
            <p>
                Pick one of the following for your basic training:
                <select @bind="ChosenBasicTrainingSkillName">
                    @foreach (var option in GetService().LastCareer.ServiceSkillsList)
                    {
                        <option value="@option.Name">@option.ToString()</option>
                    }
                </select>
                <button @onclick="ChooseBasicTrainingSkill">Pick Basic Skill</button>
            </p>
        }
    </div>
</div>
</body>