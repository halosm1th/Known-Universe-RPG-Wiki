@page "/CharacterCreation/DrawStats/{CharacterID}"
@using CharacterCreationTest.CharacterCreation
@using TravellerWiki.Data
@using TravellerWiki.Data.Charcters
@using TravellerWiki.Data.Services
@inject CharacterCreatorService CharacterCreationService;
@inject TravellerNationsCharacterInfoService nationsService;
@inject MultiPageCharacterCreationService MultiCharacterCreationService;

@code{
    [Parameter]
    public string CharacterID { get; set; }

    public CharacterCreatorService GetService()
    {
        return MultiCharacterCreationService.GetCharacterCreatorService(CharacterID);
    }
}

<div>
    <table style="float: Left;border: 1px solid #a2a9b1; background-color: SlateGray;
                                      margin: 0 2.5em 0 1em; padding: 0.2em 0.2em 0.2em 0.2em; clear: Left; width: 25em; color: #ffe81F; border-color: #ffe81F;">
        <tr>Character</tr>
        <tr>
            <td><b>Name:</b></td>
            <td style="text-align:right">@GetService().Name</td>
        </tr>
        <tr>
            <td><b>Nationality:</b></td>
            <td style="text-align:right">@GetService().Nationality.NationName</td>
        </tr>
        <tr>
            <td><b>Age:</b></td>
            <td style="text-align:right">@GetService().TravellersAge</td>
        </tr>
        <tr>
            <td><b>Career:</b></td>
            <td>@(GetService().LastCareer != null ? GetService().LastCareer.CareerName : "None") </td>
        </tr>
        <tr>
            <td><b>Assignment:</b></td>
            <td>@(GetService().LastAssignment != null ? GetService().LastAssignment.Name : "None")  </td>
        </tr>
        <tr>
            <td style="vertical-align: top"><b>Stats:</b></td>
            <td style="text-align: right; float: right;">
                <table>
                    <tr><td>@GetService().GetAttributes.First(x => x.AttributeName == TravellerAttributes.Strength)</td></tr>
                    <tr><td>@GetService().GetAttributes.First(x => x.AttributeName == TravellerAttributes.Dexterity)</td></tr>
                    <tr><td>@GetService().GetAttributes.First(x => x.AttributeName == TravellerAttributes.Endurance)</td></tr>
                    <tr><td>@GetService().GetAttributes.First(x => x.AttributeName == TravellerAttributes.Intelligence)</td></tr>
                    <tr><td>@GetService().GetAttributes.First(x => x.AttributeName == TravellerAttributes.Education)</td></tr>
                    <tr><td>@GetService().GetAttributes.First(x => x.AttributeName == TravellerAttributes.Social)</td></tr>
                    @if (GetService().GetAttributes.Any(x => x.AttributeName == TravellerAttributes.Psionics))
                    {
                        <tr><td>@GetService().GetAttributes.First(x => x.AttributeName == TravellerAttributes.Psionics).ToStringLongName()</td></tr>
                    }
                </table>
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top"><b>Skills</b> : </td>
            <td style="text-align: right;border-color: chartreuse; border-style: solid; border: 1px;">
                @(GetService()._character.SkillList.Count > 0 ? GetService()._character.SkillList.Aggregate("", (h, t) => h += ", " + t).Remove(0, 1) : "None")
            </td>
        </tr>
        <tr>
            <td><b>Finances:</b></td>
            <td>@GetService()._character.Finances</td>
        </tr>
        <tr>
            <td><b>Items:</b></td>
            <td>
                @(GetService()._character.Items.Count > 0 ?
                GetService()._character.Items.Aggregate("", (h, t) => h += ", " + t.Name).Remove(0, 1) : "None")
            </td>
        </tr>

        <tr>
            <td><b>Augments:</b></td>
            <td>
                @(GetService()._character.Augments.Count > 0 ?
                    GetService()._character.Augments.Aggregate("", (h, t) => h += ", " + t.Name).Remove(0, 1) : "None")
            </td>
        </tr>

        <tr>
            <td><b>Armour:</b></td>
            <td>
                @(GetService()._character.Armour.Count > 0 ?
                    GetService()._character.Armour.Aggregate("", (h, t) => h += ", " + t.Name).Remove(0, 1) : "None")
            </td>
        </tr>


        <tr>
            <td><b>Weapons:</b></td>
            <td>
                @(GetService()._character.Weapons.Count > 0 ?
                    GetService()._character.Weapons.Aggregate("", (h, t) => h += ", " + t.Name).Remove(0, 1) : "None")
            </td>
        </tr>
    <tr>
        <td><b>Contacts:</b></td>
        <td>
            <ul>
                @foreach (var contact in GetService()._character.Contacts)
                {
                    if (contact is TravellerSpecialNPC npc)
                    {
                        <li><b>@npc.Name:</b> @npc.PatronText - @npc.QuirkText. [@npc.Background - @npc.Career]</li>
                    }
                }
            </ul>
        </td>
    </tr>
    </table>
</div>
