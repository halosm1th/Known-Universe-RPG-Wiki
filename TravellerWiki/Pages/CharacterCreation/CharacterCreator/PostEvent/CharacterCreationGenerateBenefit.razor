@page "/CharacterCreation/GenerateBenefit/{characterID}"
@using CharacterCreationTest.CharacterCreation
@using Microsoft.AspNetCore.Html
@using TravellerWiki.Data
@using TravellerWiki.Data.Charcters
@using TravellerWiki.Data.Services
@using TravellerWiki.Data.Services.CareerService
@inject NavigationManager NavManager
@inject MultiPageCharacterCreationService MultiCharacterCreationService
@inject TravellerNationsCharacterInfoService nationsService;
<head>
    <title>@this.ToString().Replace("TravellerWiki.Pages.", "") </title>

</head>

@code{
    [Parameter]
    public string characterID { get; set; }

    public CharacterCreatorService GetService()
    {
        return MultiCharacterCreationService.GetCharacterCreatorService(characterID);
    }

    
    public Dictionary<int, int> GeneratedBenefits;
    public TravellerCareer GetCareer(){
        if (GetService().FirstTermOfJob)
        {
            var Currentcareer = GetService().PreviousCareers.Pop();
            var retCar = GetService().PreviousCareers.Peek().Career;
            GetService().PreviousCareers.Push(Currentcareer);
            return retCar;
        }
        else
        {
            return GetService().LastCareer;
        }
    }

    public void GenerateBenefits()
    {
        GeneratedBenefits = GetService().GenerateBenefits();

    }
    
    public void DoneNationality()
    {
        NavManager.NavigateTo($"/CharacterCreation/Base/{characterID}");
    }

}
<body>
    <div style="text-align: center">
        <h1>Traveller Character Creator</h1>
        <h2>Select @GetService().Name's - Benefits</h2>
        @if (GeneratedBenefits == null)
        {
            GenerateBenefits();
        }

        <p>You have: @GetService().NumberOfBenefitRolls benefit rolls for the @GetCareer() with the following modifiers: @GetService().BenefitRollModifiers.Aggregate("", (h, t) => h += ", " + t).Remove(0, 1)</p>
        <p>
            The @GetCareer() Benefit Table looks like:
            <ol>
                <li>Cash | Reward</li>
                @foreach (var benefit in GetCareer().MusteringOutBenefits)
                {
                    <li> Cr @benefit.Cash | @benefit.Benefit</li>
                }
            </ol>
        </p>
        <p>You have: @GeneratedBenefits remaining.</p>
        <p>Select Benefit Roll to use <select></select></p>
        @if (GetService().BenefitRollModifiers.Count >= 0)
        {
            <p>Select a benefit roll modifer to use, if any <select></select></p>
        }
        <button>Cash</button> or <button>Benefit</button>
    </div>
</body>