@page
@using TravellerWiki.Data
@using TravellerWiki.Data.Services.CareerService
@model TravellerWiki.NationInfoPageModel
@{
    ViewData["Title"] = @Model.NationName;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>@Model.NationName </title>

    <meta property="og:title" content="Known Universe Wiki - @Model.NationName" />
    <meta property="og:url" content="https://theseamnetwork.com" />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="https://thesteamnetwork.com/favicon.ico" />
    <meta content="View a summery of Information for your chosen nationality. @Model.CharacterInfo.BackgroundText" property="og:description" />
    <meta content="#ffe81F" data-react-helmet="true" name="theme-color" />


    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <h1>@Model.NationName</h1>

    <h2>Background</h2>
    <p>@Model.CharacterInfo.BackgroundText</p>
    <a href="/CharacterCreation/">Back to Character Creation</a>
    <p style="font-size: xx-small">Brackets represent an optional choice, a '|' or separation means OR as in: A | B == A OR B</p>

    <h3>Entry Requirements</h3>
    <p>@(Model.CharacterInfo.EntryRequirements.Count>0? 
           Model.CharacterInfo.EntryRequirements.Aggregate("", (core, addition) => String.Concat(core, ", ", addition)) : "None")</p>

    <h3>Stat Changes & Perks</h3>
    <p>
        Stat Changes: @Model.CharacterInfo.GetStatChanges()
    </p>
    <p>
        @if (Model.CharacterInfo.Perks.Count > 0)
        {
            var remove = Model.CharacterInfo.Perks.Aggregate("", (h, t) => h + ", " + t).Remove(0, 1);
            <text>Perks: @remove</text>
        }
    </p>
    <h3>Background Skills</h3>

    @{
        var skills = Model.CharacterInfo.BackgroundSkills.Aggregate("", (s, n) => s + ", " + n.Value).Remove(0, 1);
    }
    <p>
        @skills

    </p>
    <h3>National Career Options</h3>
    <ul>
        @foreach (var career in TravellerCareerService.StaticListOfCareers.Where(career => career.Nationality == Model.NationName))
        {
            <li>
                <p>
                    <a href="/Career?career=@career.CareerName">@career.CareerName </a> - @career.CareerDescription
                </p>
            </li>
        }
    </ul>
</body>
</html>