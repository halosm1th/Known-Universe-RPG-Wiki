@page "/Generators/SectorGenerator/"
@using TravellerGalaxyGenertor
@using TravellerMapSystem
@inject TravellerSubsectorGeneratorService subsectorGenerator; 
@inject NavigationManager NavManager
@inject IJSRuntime JsRuntime;

<h3>Sector Generator</h3>

@code {
    int subsectorDensity = 50;
    int maxNumberOfPlanets = 4;
    private readonly int minSystemCount = 1;

    public string subsectorName;
    private string sectorID { get; set; }

    public void GenerateSector()
    {
    //todo make this a drop down menu
        sectorID = subsectorGenerator.GenerateSector(subsectorName);
        var url = $"/InformationOnSetting/SectorInfo/{sectorID}";
        JsRuntime.InvokeVoidAsync("open", url, "_blank");
    }


}

<h2>Traveller Sector Generator</h2>
<p>
    <label for="name">Name:</label>
    <input type="text" id="name" placeholder="Sector Name" @bind="subsectorName"/>

    <br/>
    <label for="density">Density: @subsectorDensity</label>
    <input type="range" min="1" max="100" step="1" id="density" @bind="subsectorDensity"/>

    <br/>
    <label for="maxGenWorld">Max Number Of Worlds per system: @maxNumberOfPlanets</label>
    <input type="range" min="1" max="22" step="1" id="maxGenWorld" @bind="maxNumberOfPlanets"/>

    <br/>
    <button type="submit" @onclick="GenerateSector">Generate Subsector</button>

    <br/>
    <a href="/Generators/GeneratedSubsectors/">Click to see all generated subsectors.</a>
</p>

@if (!string.IsNullOrEmpty(sectorID))
{
    <a href="/InformationOnSetting/SubsectorInfo/@sectorID">Click me to view your generated subsector. ID #@sectorID</a>
}